1. 사장님은 시스템에 휴대폰번호와 비밀번호 입력을 통해서 회원 가입을 할 수 있습니다. 
    - 사장님의 휴대폰 번호를 올바르게 입력했는지 확인해주세요 O
    - 비밀번호를 안전하게 보관할 수 있는 장치를 만들어주세요 O
2. 사장님은 회원 가입이후, 로그인과 로그아웃을 할 수 있습니다. O
3. 사장님은 로그인 이후 상품관련 아래의 행동을 할 수 있습니다. O
    1. 상품의 필수속성(required)은 다음과 같습니다. 
        1. 카테고리
        2. 가격
        3. 원가 
        4. 이름 
        5. 설명
        6. 바코드
        7. 유통기한 
        8. 사이즈 : small or large
    2. 사장님은 상품을 등록할 수 있습니다. O
    3. 사장님은 상품의 속성을 부분 수정할 수 있습니다. O
    4. 사장님은 상품을 삭제 할 수 있습니다 O
    5. 사장님은 등록한 상품의 리스트를 볼 수 있습니다. O
        - cursor based pagination 기반으로, 1page 당 10개의 상품이 보이도록 구현
    6. 사장님은 등록한 상품의 상세 내역을 볼 수 있습니다. O
    7. 사장님은 상품 이름을 기반으로 검색할 수 있습니다. 
        - 이름에 대해서 like 검색과 초성검색을 지원해야 합니다.
        - 예) 슈크림 라떼 → 검색가능한 키워드 : 슈크림, 크림, 라떼, ㅅㅋㄹ, ㄹㄸ
4. 로그인하지 않은 사장님의 상품 관련 API에 대한 접근 제한 처리가 되어야 합니다. O


구현
- 언어에 상관없이 Docker를 기반으로 서버를 실행 할 수 있도록 작성해주세요.
- DB 관련 테이블에 대한 DDL 파일을 소스 디렉토리 안에 넣어주세요.
- 테스트 케이스를 작성해주세요.
- JWT토큰을 발행해서 인증을 제어하는 방식으로 구현해주세요 O
- 각 API는 아래의 custom response json 형식으로 반환되야합니다.(204 No Content 제외)
{
   "meta":{
       "code": 200, // http status code와 같은 code를 응답으로 전달 
       "message":"ok" // 에러 발생시, 필요한 에러 메시지 전달 
		}, 
		"data":{
       "proiducts":[...]
		}
}


// 400 Bad Request Example 
{
   "meta":{
       "code": 400, 
       "message":"잘못된 상품 사이즈 입니다."
		}, 
		"data":null 
}
